name: ???
rundir: "${dir:runtime}/saves/${name}"

hydra:
  job:
    name: "${name}"
  run:
    dir: "${rundir}/${name}"
  sweep:
    dir: "${dir:runtime}/saves/${name}"
    subdir: "${base:${data.dataset.root}}"

defaults:
  - data:
    - defaults
    - dataset/audio
    - transforms/dgt-1024
  - model: vae
  - callbacks: audio_defaults
  - _self_

data:
  transforms: 
    name: dgt-1024-magmel
    pre_transforms:
      - {type: Mono, args: {squeeze: 1}}
      - {type: DGT, args: {n_fft: &n_fft 2048, hop_length: 512}}
      - {type: Magnitude, args: {contrast: log1p, n_fft: *n_fft, mel: 1, mode: unipolar}}
    transforms: 
      - {type: Unsqueeze, args: {dim: -2}}
  augmentations:
    - {type: Shift, args: {prob: 0.5}}
    - {type: Normal, args: {prob: 0.5, amp_range: 0.1, clamp: [0, none]}}
  dataset:
    flatten: -2
    # for learning single data spectral frames, the data can be whether flattened of randomly picked in each file. For the
    # second case, rather uncomment the sequence section.
    # sequence:
    #   length: 1
    #   mode: random
    #   idx: -2
  loader:
    batch_size: 256
    shuffle: True

# here we add specific parameters for the decoder's output (softplus + normal distribution).
model:
  latent:
    dist: Normal
    dim: 8
  decoder:
    args:
      out_nnlin: Softplus
      target_dist: Normal
  training: 
    beta: 0.1
    beta_schedule_type: batch
    reconstruction:
      type: MSE
      args:
        normalize: [-2, -1]
    warmup: 100000

pl_trainer:
  max_epochs: 500
  # limit_train_batches: 1
  # limit_val_batches: 1

